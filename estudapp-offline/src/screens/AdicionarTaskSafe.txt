import React, { Component } from 'react'
import {
    Modal,
    View,
    Text,
    TextInput,
    DatePickerIOS,
    StyleSheet,
    TouchableWithoutFeedback,
    TouchableOpacity,
    Alert,
    DatePickerAndroid,
    TimePickerAndroid,
    Platform, 
    Picker
} from 'react-native'
import moment from 'moment'
import 'moment/locale/pt-br';
import commonStyles from '../commonStyles'
import DateTimePicker from 'react-native-modal-datetime-picker'

const initialState = { description: '', subject: '', priority: '', date: new Date(), time: new Date() }

export default class AddTask extends Component {
    state = { ...initialState }

    save = () => {
        if (!this.state.description.trim() || !this.state.subject.trim() || !this.state.priority.trim()) {
            Alert.alert('Dados inválidos', 'Informe todos os dados necessários!')
            return
        }

        const data = { ...this.state }
        this.props.onSave(data)
        this.setState({ ...initialState })
    }

    handleDateTimeAndroidChanged = () => {
        TimePickerAndroid.open({
            time: this.state.time
        }).then(f => {
            if (f.action !== TimePickerAndroid.dismissedAction) {
                const momentTime = moment(this.state.time)
                momentTime.hours(f.hour)
                momentTime.minutes(f.minute)
                this.setState({ time: momentTime.toDate() })
            }
        })
        DatePickerAndroid.open({
            date: this.state.date
        }).then(e => {
            if (e.action !== DatePickerAndroid.dismissedAction) {
                const momentDate = moment(this.state.date)
                momentDate.date(e.day)
                momentDate.month(e.month)
                momentDate.year(e.year)
                this.setState({ date: momentDate.toDate() })
            }
        })
    }
    //DatePicker -> Implementar data e hora como objeto e não apenas como texto
    /*
        *DATEPICKER CODE
        <DateTimePicker
            isVisible={this.state.isVisible}
            mode={'datetime'}
            is24Hour={true}
            onConfirm={this.handlePicker}
            onCancel={this.hidePicker}
        />
    */
    /*
    showPicker = () => {
        this.setState({
            isVisible: true
        })
    }
    handlePicker = (datetime) => {
        this.setState({
            isVisible: false,
            date: moment(datetime).locale('pt-br').format('ddd, D [de] MMMM [de] YYYY [às] LT')
        })
    }
    hidePicker = () => {
        this.setState({
            isVisible: false
        })
    }
    */
    render() {
        let datePicker = null
        if (Platform.OS === 'ios') {
            datePicker = <DatePickerIOS mode='datetime' date={this.state.date}
                onDateChange={date => this.setState({ date })} />
        } else {
            datePicker = (
                <TouchableOpacity onPress={this.handleDateTimeAndroidChanged}>
                    <Text style={styles.date}>
                        {moment(this.state.date).format('ddd, D [de] MMMM [de] YYYY') +' às '+ moment(this.state.time).format('LT')}
                    </Text>
                </TouchableOpacity>
            )
        }

        return (
            <Modal onRequestClose={this.props.onCancel}
                visible={this.props.isVisible}
                animationType='slide' transparent={true}>
                <TouchableWithoutFeedback onPress={this.props.onCancel}>
                    <View style={styles.offset}></View>
                </TouchableWithoutFeedback>
                <View style={styles.container}>
                    <Text style={styles.header}>Nova Tarefa!</Text>
                    <TextInput placeholder="Categoria..." style={styles.input}
                        onChangeText={subject => this.setState({ subject })}
                        value={this.state.subject} />
                    <TextInput placeholder="Prioridade..." style={styles.input}
                        onChangeText={priority => this.setState({ priority })}
                        value={this.state.priority} />
                    <TextInput placeholder="Descrição..." style={styles.input}
                        onChangeText={description => this.setState({ description })}
                        value={this.state.description} />
                    {datePicker}
                    <View style={{
                        flexDirection: 'row',
                        justifyContent: 'flex-end'
                    }}>
                        <TouchableOpacity onPress={this.props.onCancel}>
                            <Text style={styles.button}>Cancelar</Text>
                        </TouchableOpacity>
                        <TouchableOpacity onPress={this.save}>
                            <Text style={styles.button}>Salvar</Text>
                        </TouchableOpacity>
                    </View>
                </View>
                <TouchableWithoutFeedback onPress={this.props.onCancel}>
                    <View style={styles.offset}></View>
                </TouchableWithoutFeedback>
            </Modal>
        )
    }
}

var styles = StyleSheet.create({
    container: {
        backgroundColor: 'white',
        justifyContent: 'space-between',
    },
    offset: {
        flex: 1,
        backgroundColor: 'rgba(0,0,0,0.7)',
    },
    button: {
        margin: 20,
        marginRight: 30,
        color: commonStyles.colors.default,
    },
    header: {
        fontFamily: commonStyles.fontFamily,
        backgroundColor: commonStyles.colors.default,
        color: commonStyles.colors.secondary,
        textAlign: 'center',
        padding: 15,
        fontSize: 15,
    },
    input: {
        fontFamily: commonStyles.fontFamily,
        width: '90%',
        height: 40,
        marginTop: 10,
        marginLeft: 10,
        backgroundColor: 'white',
        borderWidth: 1,
        borderColor: '#e3e3e3',
        borderRadius: 6
    },
    date: {
        fontFamily: commonStyles.fontFamily,
        fontSize: 20,
        marginLeft: 10,
        marginTop: 10,
        textAlign: 'center',
    }
}) 